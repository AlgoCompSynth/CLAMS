echo "Checking for CLAMS_BASE"
if [ "${#CLAMS_BASE}" -lt "1" ]
then
  echo "CLAMS_BASE must be defined - exiting with error -1024!"
  exit -1024
fi

# Don't change any of these!
echo "Creating CLAMS_BASE if necessary"; mkdir --parents $CLAMS_BASE

export PICO_PATH=$CLAMS_BASE/pico

# we just use the "master" branch for now
export PICO_SDK_URL="https://github.com/raspberrypi/pico-sdk.git"
export PICO_SDK_PATH="$PICO_PATH/pico-sdk"
export PICOTOOL_URL="https://github.com/raspberrypi/picotool.git"
export PICOTOOL_PATH="$PICO_PATH/picotool"

# Raspberry Pi sample projects
export PICO_EXAMPLES_URL="https://github.com/raspberrypi/pico-examples.git"
export PICO_EXAMPLES_PATH="$PICO_PATH/pico-examples"
export PICO_EXTRAS_URL="https://github.com/raspberrypi/pico-extras.git"
export PICO_EXTRAS_PATH="$PICO_PATH/pico-extras"
export PICO_PLAYGROUND_URL="https://github.com/raspberrypi/pico-playground.git"
export PICO_PLAYGROUND_PATH="$PICO_PATH/pico-playground"

# Utilities
export PICO_UTILITIES_PATH=$PICO_PATH/pico-utilities

# RISC-V compiler
# https://www.embecosm.com/resources/tool-chain-downloads/#corev
# recommended by Raspberry Pi Pico C/C++ SDK documentation
export RISC_V_COMPILER_TARBALL=corev-openhw-gcc-ubuntu2204-20240530.tar.gz
export RISC_V_COMPILER_URL=https://buildbot.embecosm.com/job/corev-gcc-ubuntu2204/47/artifact/$RISC_V_COMPILER_TARBALL

# latest stable Pico W Pythons - not RP2350-aware!!!!
export CIRCUITPYTHON_DOWNLOAD="https://downloads.circuitpython.org/bin/raspberry_pi_pico_w/en_US/adafruit-circuitpython-raspberry_pi_pico_w-en_US-9.1.1.uf2"
export MICROPYTHON_DOWNLOAD="https://micropython.org/resources/firmware/RPI_PICO_W-20240602-v1.23.0.uf2"

# RP2350 Pythons
export SPARKFUN_PRO_MICRO_RP2350_MICROPYTHON_DOWNLOAD="https://cdn.sparkfun.com/assets/6/3/c/f/d/firmware_pro_micro_rp2350.uf2"

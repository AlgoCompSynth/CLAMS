# Command Line Algorithmic Music System (CLAMS) {.unnumbered}

> “I’ve never seen a happy clam. In fact, most of them were really
> steamed.” ~ M. Edward (Ed) Borasky

## Overview

`CLAMS` is a text-based interactive environment for composing and performing
music and visuals on a [Pimoroni
PicoVision](https://shop.pimoroni.com/products/picovision?variant=41048911904851).
It can be made to work on other boards using the RP2040 microcontroller, but
you will need to buy additional hardware and port some code.

## How does it work?

`CLAMS` is a domain-specific language built on a Forth compiler /
interpreter. The user connects to the board via a serial connection and
enters `CLAMS` / Forth code interactively.

## Why Forth?

1. Forth [@brodie2022] is an extensible interactive operating system. It
supports editing, assembling, compiling, debugging and running real-time
tasks from a terminal.
2. Forth is efficient. A well-designed Forth will usually run a task at no
worse than half the speed of a hand-optimized assembly version. `CLAMS` will
have several optimizations built in for the ultimate speed.
3. Forth is lean. There are very few concepts to learn, there is minimal
run-time overhead in RAM, and the whole package takes up much less flash space
than MicroPython or CircuitPython.

## What about Forth standard [@forth2022] compatibility?

`CLAMS` is an extended subset of the standard. It won't contain all of the
standard's core word set, and it will contain some extensions to support
the Raspberry Pi Pico C/C++ SDK, RP2040 assembly language programming, the
PicoVision hardware, cooperative multitasking, and high-speed digital signal
processing.

## What about portability?

Within the RP2040 ecosystem, as long as the PicoVision and C/C++ SDK work,
porting should be straightforward, though tedious. And you will undoubtedly need
to buy more hardware.

Outside of the RP2040 ecosystem, there are a number of other micro-controller
music boards, most notably the [Electro-Smith
Daisy](https://www.electro-smith.com/daisy
"Electro-Smith Daisy") and the [Rebel Technology
OWL](https://github.com/RebelTechnology/OpenWare "Rebel Technology on
GitHub") platforms. But they have their own SDKs, so there's not much need to
port `CLAMS` to them.

There are also a number of audio projects that use the [Teensy® USB Development
Board](https://www.pjrc.com/teensy/ "Teensy Home Page"), which has a
[comprehensive audio library](https://www.pjrc.com/teensy/td_libs_Audio.html
"Teensy Audio Library"). Like the first two, it has its own SDK. And the Daisy,
OWL and Teensy processors are all more powerful than the RP2040.

By contrast, there's not much music-specific development software for the
Raspberry Pi Pico / RP2040. There are some simple demos, a few do-it-yourself
hardware offerings, and there's the
[Allen Synthesis EuroPi](https://allensynthesis.co.uk/modules/europi.html
"EuroPi module"), a Eurorack module with an open source MicroPython software
platform. `CLAMS` will be a different approach.

The overall concept is an interactive language for making music on Raspberry
Pi Pico / RP2040. I'm aiming for [ChucK](https://chuck.stanford.edu/ "ChucK
Home Page") [@salazar2014programming] semantics with Forth syntax - a single
text-based language to implement both the definitions of synthesized
instruments and the sequences of sounds they make, intended for [live coding
/ algorave](https://github.com/toplap/awesome-livecoding "Awesome Live Coding
list on GitHub") performances.

* * * * *

This is a Quarto book.

To learn more about Quarto books visit <https://quarto.org/docs/books>.

* * * * *

 <p xmlns:cc="http://creativecommons.org/ns#" xmlns:dct="http://purl.org/dc/terms/"><a property="dct:title" rel="cc:attributionURL" href="https://algocompsynth.github.io/CLAMS/">The Book of CLAMS</a> by <a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://github.com/znmeb">M. Edward (Ed) Borasky</a> is marked with <a href="http://creativecommons.org/publicdomain/zero/1.0?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">CC0 1.0 Universal<img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/zero.svg?ref=chooser-v1"></a></p> 